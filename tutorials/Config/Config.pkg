<refentry id="{@id}">
    <refnamediv>
        <refname>Config Package</refname>
    </refnamediv>
    
    <!-- {@toc} -->
    
    <refsect1 id="{@id description}">
        <title>Package decription</title>
        
        <para>
        The Config package consists only of one class ({@link PHPFrame_Config}) that 
        provides allows to read, parse and write ini files.
        </para>
        
        <para>
        Config objects are primary used to work with the default configuration file 
        normally stored in etc/phpframe.ini
        </para>
    
    </refsect1>
        
    <refsect1 id="{@id examples}">
        <title>Examples</title>
        
        <example>
            <title>Showing some of the config object's functionality</title>
            <programlisting>
<![CDATA[
// Get default config
$config = PHPFrame::Config();

// print config object as string
// Note that if we try to use a config object as a string it will automatically 
// be cast to a string representing the ini file 
echo '<h2>The config object as a string</h2>';
echo '<pre>'.$config.'</pre>';

// Now lets see what keys are available in current config object
echo '<h2>The keys available in this config object</h2>';
var_dump($config->getKeys());

// Set some config keys
$config->set("app_name", "New app name");
$config->set("debug.enable", true);
$config->set("debug.log_level", 3);

// Lets prove that the data was updated
echo 'The new name of our app is: ';
echo $config->get("app_name");
]]>
            </programlisting>        
        </example>
        
    </refsect1>
    
</refentry>
