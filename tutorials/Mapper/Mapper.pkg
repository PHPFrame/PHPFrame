<refentry id="{@id}">

<refnamediv>
    <refname>Mapper Package</refname>
</refnamediv>

{@toc}

<refsect1 id="{@id description}">
    <title>Package decription</title>
    
    <para>
    The mapper package provides a set of objects to easily get your objects in 
    and out of the database.
    </para>
    
    <para>
    Mappers are designed to be used with "domain objects" that descend from the 
    {@link PHPFrame_DomainObject} class. You will normally be creating 
    your app models by extending this class, making it really easy to persist 
    those objects.
    </para>

</refsect1>

<refsect1 id="{@id classes}">
    <title>Mapper classes</title>
    
    <itemizedlist>
        <listitem>
        <para>
        {@link PHPFrame_Mapper}
        </para>
    </listitem>
    <listitem>
        <para>
        {@link PHPFrame_DomainObjectCollection}
        </para>
    </listitem>
    <listitem>
        <para>
        {@link PHPFrame_DomainObject}
        </para>
    </listitem>
    <listitem>
        <para>
        {@link PHPFrame_DomainObjectAssembler}
        </para>
    </listitem>
    <listitem>
        <para>
        {@link PHPFrame_DomainObjectFactory}
        </para>
    </listitem>
    <listitem>
        <para>
        {@link PHPFrame_IdObject}
        </para>
    </listitem>
    <listitem>
        <para>
        {@link PHPFrame_PersistenceFactory}
        </para>
    </listitem>
    </itemizedlist>

</refsect1>


<refsect1 id="{@id extending}">
    <title>Extending the DomainObject class</title>
    
    <para>
    
    </para>
</refsect1>


<refsect1 id="{@id examples}">
    <title>Examples</title>
    
    <example>
        <title>Find a domain object using the a generic mapper</title>
        <para>
        In this example we create an instance of PHPFrame_ACL, which 
        extends PHPFrame_DomainObject, so that we can use it with the 
        mapper.
        </para>
        <programlisting>
<![CDATA[
// Instantiate generic mapper for PHPFrame_ACL class 
// and specify XML storage
$mapper = new PHPFrame_Mapper(
    "PHPFrame_ACL", 
    "acl", 
    PHPFrame_Mapper::STORAGE_XML, 
    false, 
    DS."tmp".DS."domain.objects"
);

// Instantiate domain object
$acl = new PHPFrame_ACL(array(
    "groupid"=>1, 
    "controller"=>"dummy", 
    "action"=>"*", 
    "value"=>"all"
));

// Insert new object
$mapper->insert($acl);

// Find objects and iterate through collection
foreach ($mapper->find() as $item) {
    print_r($item);
}
]]>
        </programlisting>
        <screen>
<![CDATA[
PHPFrame_ACL Object
(
    [groupid:protected] => 1
    [controller:protected] => dummy
    [action:protected] => *
    [value:protected] => all
    [id:protected] => 1
    [created:protected] => 2009-09-03 14:18:06
    [modified:protected] => 2009-09-03 14:18:06
    [_dirty:private] => 
)
]]>
        </screen>
    </example>
    
</refsect1>
    
</refentry>
